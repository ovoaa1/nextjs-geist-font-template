{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n"],"names":[],"mappings":";;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,EAAE,SAAS,EAAE,GAAG,OAAoC;IAChE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;KAXS;AAaT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,8JACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAoC;IACrE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,gBAAgB,EAAE,SAAS,EAAE,GAAG,OAAoC;IAC3E,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAoC;IACvE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf;MARS","debugId":null}},
    {"offset": {"line": 122, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/progress.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Progress({\n  className,\n  value,\n  ...props\n}: React.ComponentProps<typeof ProgressPrimitive.Root>) {\n  return (\n    <ProgressPrimitive.Root\n      data-slot=\"progress\"\n      className={cn(\n        \"bg-primary/20 relative h-2 w-full overflow-hidden rounded-full\",\n        className\n      )}\n      {...props}\n    >\n      <ProgressPrimitive.Indicator\n        data-slot=\"progress-indicator\"\n        className=\"bg-primary h-full w-full flex-1 transition-all\"\n        style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n      />\n    </ProgressPrimitive.Root>\n  )\n}\n\nexport { Progress }\n"],"names":[],"mappings":";;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,SAAS,EAChB,SAAS,EACT,KAAK,EACL,GAAG,OACiD;IACpD,qBACE,6LAAC,uKAAA,CAAA,OAAsB;QACrB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,uKAAA,CAAA,YAA2B;YAC1B,aAAU;YACV,WAAU;YACV,OAAO;gBAAE,WAAW,CAAC,YAAY,EAAE,MAAM,CAAC,SAAS,CAAC,EAAE,EAAE,CAAC;YAAC;;;;;;;;;;;AAIlE;KArBS","debugId":null}},
    {"offset": {"line": 167, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/app/dashboard/performance/page.tsx"],"sourcesContent":["\"use client\"\n\nimport { useState, useEffect } from \"react\"\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Button } from \"@/components/ui/button\"\nimport { Badge } from \"@/components/ui/badge\"\nimport { ScrollArea } from \"@/components/ui/scroll-area\"\nimport { Progress } from \"@/components/ui/progress\"\nimport {\n  Activity,\n  Cpu,\n  HardDrive,\n  Globe,\n  AlertTriangle,\n  Clock,\n  RefreshCw,\n  Zap,\n  Layers,\n  Users,\n  Gauge,\n  ArrowDown,\n  ArrowUp,\n  BarChart\n} from \"lucide-react\"\nimport { useMinecraft } from \"@/contexts/MinecraftContext\"\n\n// Tipo para dados de série temporal\ninterface TimeSeriesData {\n  timestamp: Date\n  value: number\n}\n\nexport default function PerformancePage() {\n  const { serverStatus } = useMinecraft()\n  \n  // Estado para dados históricos\n  const [tpsHistory, setTpsHistory] = useState<TimeSeriesData[]>([])\n  const [cpuHistory, setCpuHistory] = useState<TimeSeriesData[]>([])\n  const [memoryHistory, setMemoryHistory] = useState<TimeSeriesData[]>([])\n  const [autoRefresh, setAutoRefresh] = useState(true)\n\n  // Atualizar dados históricos\n  useEffect(() => {\n    if (!autoRefresh) return\n\n    const interval = setInterval(() => {\n      const now = new Date()\n      \n      setTpsHistory(prev => [\n        ...prev.slice(-59),\n        { timestamp: now, value: serverStatus.tps }\n      ])\n\n      setCpuHistory(prev => [\n        ...prev.slice(-59),\n        { timestamp: now, value: serverStatus.cpu }\n      ])\n\n      setMemoryHistory(prev => [\n        ...prev.slice(-59),\n        { timestamp: now, value: (serverStatus.memory.used / serverStatus.memory.total) * 100 }\n      ])\n    }, 1000)\n\n    return () => clearInterval(interval)\n  }, [autoRefresh, serverStatus])\n\n  const formatUptime = (seconds: number) => {\n    const days = Math.floor(seconds / 86400)\n    const hours = Math.floor((seconds % 86400) / 3600)\n    const minutes = Math.floor((seconds % 3600) / 60)\n    return `${days}d ${hours}h ${minutes}m`\n  }\n\n  const getTpsColor = (tps: number) => {\n    if (tps >= 19) return \"text-green-500\"\n    if (tps >= 15) return \"text-yellow-500\"\n    return \"text-red-500\"\n  }\n\n  const getStatusIndicator = (value: number, type: 'tps' | 'cpu' | 'memory') => {\n    switch (type) {\n      case 'tps':\n        if (value >= 19) return { color: 'bg-green-500', text: 'Excelente' }\n        if (value >= 15) return { color: 'bg-yellow-500', text: 'Moderado' }\n        return { color: 'bg-red-500', text: 'Crítico' }\n      case 'cpu':\n        if (value <= 50) return { color: 'bg-green-500', text: 'Normal' }\n        if (value <= 80) return { color: 'bg-yellow-500', text: 'Alto' }\n        return { color: 'bg-red-500', text: 'Crítico' }\n      case 'memory':\n        if (value <= 60) return { color: 'bg-green-500', text: 'Normal' }\n        if (value <= 85) return { color: 'bg-yellow-500', text: 'Alto' }\n        return { color: 'bg-red-500', text: 'Crítico' }\n      default:\n        return { color: 'bg-gray-500', text: 'Desconhecido' }\n    }\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex justify-between items-center\">\n        <div>\n          <h1 className=\"text-3xl font-bold text-white\">Performance do Servidor</h1>\n          <p className=\"text-gray-400\">Monitore o desempenho do servidor em tempo real</p>\n        </div>\n        <div className=\"flex items-center space-x-2\">\n          <Button\n            variant=\"outline\"\n            className={`border-blue-600 ${autoRefresh ? 'text-blue-400' : 'text-gray-400'}`}\n            onClick={() => setAutoRefresh(!autoRefresh)}\n          >\n            <RefreshCw className={`mr-2 h-4 w-4 ${autoRefresh ? 'animate-spin' : ''}`} />\n            {autoRefresh ? 'Auto Refresh' : 'Refresh Off'}\n          </Button>\n        </div>\n      </div>\n\n      {/* Status Cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n        <Card className=\"bg-gray-800 border-gray-700\">\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium text-gray-300\">TPS</CardTitle>\n            <Activity className=\"h-4 w-4 text-yellow-500\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold text-white\">\n              {serverStatus.tps.toFixed(1)}\n            </div>\n            <div className=\"flex items-center mt-1\">\n              <div className={`w-2 h-2 rounded-full mr-2 ${getStatusIndicator(serverStatus.tps, 'tps').color}`} />\n              <p className=\"text-xs text-gray-400\">\n                {getStatusIndicator(serverStatus.tps, 'tps').text}\n              </p>\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card className=\"bg-gray-800 border-gray-700\">\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium text-gray-300\">CPU</CardTitle>\n            <Cpu className=\"h-4 w-4 text-blue-500\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold text-white\">\n              {serverStatus.cpu.toFixed(1)}%\n            </div>\n            <div className=\"flex items-center mt-1\">\n              <div className={`w-2 h-2 rounded-full mr-2 ${getStatusIndicator(serverStatus.cpu, 'cpu').color}`} />\n              <p className=\"text-xs text-gray-400\">\n                {getStatusIndicator(serverStatus.cpu, 'cpu').text}\n              </p>\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card className=\"bg-gray-800 border-gray-700\">\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium text-gray-300\">Memória</CardTitle>\n            <HardDrive className=\"h-4 w-4 text-purple-500\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold text-white\">\n              {serverStatus.memory.used.toFixed(1)}GB / {serverStatus.memory.total}GB\n            </div>\n            <div className=\"flex items-center mt-1\">\n              <div className={`w-2 h-2 rounded-full mr-2 ${getStatusIndicator((serverStatus.memory.used / serverStatus.memory.total) * 100, 'memory').color}`} />\n              <p className=\"text-xs text-gray-400\">\n                {getStatusIndicator((serverStatus.memory.used / serverStatus.memory.total) * 100, 'memory').text}\n              </p>\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card className=\"bg-gray-800 border-gray-700\">\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium text-gray-300\">Uptime</CardTitle>\n            <Clock className=\"h-4 w-4 text-green-500\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold text-white\">\n              {formatUptime(serverStatus.uptime)}\n            </div>\n            <p className=\"text-xs text-gray-400 mt-1\">\n              Sem reinicializações\n            </p>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Performance Graphs */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        {/* TPS Graph */}\n        <Card className=\"bg-gray-800 border-gray-700\">\n          <CardHeader>\n            <CardTitle className=\"text-white flex items-center\">\n              <Activity className=\"mr-2 h-5 w-5\" />\n              TPS ao Longo do Tempo\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"h-[200px] relative\">\n              <div className=\"absolute inset-0 flex items-end\">\n                {tpsHistory.map((data, index) => (\n                  <div\n                    key={index}\n                    className=\"flex-1 mx-[1px]\"\n                    style={{\n                      height: `${(data.value / 20) * 100}%`,\n                      backgroundColor: `rgb(${Math.max(0, Math.min(255, (20 - data.value) * 25))}, ${Math.max(0, Math.min(255, data.value * 12))}, 0)`,\n                    }}\n                  />\n                ))}\n              </div>\n              <div className=\"absolute inset-0 grid grid-rows-4 pointer-events-none\">\n                {[20, 15, 10, 5].map((tick) => (\n                  <div\n                    key={tick}\n                    className=\"border-t border-gray-700 text-xs text-gray-500 pl-2\"\n                  >\n                    {tick}\n                  </div>\n                ))}\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* CPU/Memory Graph */}\n        <Card className=\"bg-gray-800 border-gray-700\">\n          <CardHeader>\n            <CardTitle className=\"text-white flex items-center\">\n              <Gauge className=\"mr-2 h-5 w-5\" />\n              Uso de Recursos\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"h-[200px] relative\">\n              <div className=\"absolute inset-0 flex items-end\">\n                {cpuHistory.map((data, index) => (\n                  <div\n                    key={index}\n                    className=\"flex-1 mx-[1px] flex flex-col justify-end\"\n                  >\n                    <div\n                      className=\"w-full bg-blue-500/50\"\n                      style={{ height: `${data.value}%` }}\n                    />\n                    <div\n                      className=\"w-full bg-purple-500/50\"\n                      style={{ height: `${(memoryHistory[index]?.value || 0)}%` }}\n                    />\n                  </div>\n                ))}\n              </div>\n              <div className=\"absolute inset-0 grid grid-rows-4 pointer-events-none\">\n                {[100, 75, 50, 25].map((tick) => (\n                  <div\n                    key={tick}\n                    className=\"border-t border-gray-700 text-xs text-gray-500 pl-2\"\n                  >\n                    {tick}%\n                  </div>\n                ))}\n              </div>\n            </div>\n            <div className=\"flex justify-center space-x-4 mt-4\">\n              <div className=\"flex items-center\">\n                <div className=\"w-3 h-3 bg-blue-500/50 mr-2\" />\n                <span className=\"text-sm text-gray-400\">CPU</span>\n              </div>\n              <div className=\"flex items-center\">\n                <div className=\"w-3 h-3 bg-purple-500/50 mr-2\" />\n                <span className=\"text-sm text-gray-400\">Memória</span>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Resource Usage Details */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        <Card className=\"bg-gray-800 border-gray-700\">\n          <CardHeader>\n            <CardTitle className=\"text-white flex items-center\">\n              <Layers className=\"mr-2 h-5 w-5\" />\n              Uso de Recursos\n            </CardTitle>\n          </CardHeader>\n          <CardContent className=\"space-y-6\">\n            {/* CPU Usage */}\n            <div className=\"space-y-2\">\n              <div className=\"flex justify-between text-sm\">\n                <span className=\"text-gray-300\">CPU</span>\n                <span className=\"text-white\">{serverStatus.cpu.toFixed(1)}%</span>\n              </div>\n              <Progress value={serverStatus.cpu} className=\"h-2\" />\n              <div className=\"flex justify-between text-xs text-gray-400\">\n                <span>Threads: 4</span>\n                <span>Processos: 12</span>\n                <span>Load Avg: 2.45</span>\n              </div>\n            </div>\n\n            {/* Memory Usage */}\n            <div className=\"space-y-2\">\n              <div className=\"flex justify-between text-sm\">\n                <span className=\"text-gray-300\">Memória</span>\n                <span className=\"text-white\">\n                  {serverStatus.memory.used.toFixed(1)}GB / {serverStatus.memory.total}GB\n                </span>\n              </div>\n              <Progress \n                value={(serverStatus.memory.used / serverStatus.memory.total) * 100} \n                className=\"h-2\" \n              />\n              <div className=\"flex justify-between text-xs text-gray-400\">\n                <span>Heap: 2.1GB</span>\n                <span>Non-Heap: 256MB</span>\n                <span>Cached: 512MB</span>\n              </div>\n            </div>\n\n            {/* Disk Usage */}\n            <div className=\"space-y-2\">\n              <div className=\"flex justify-between text-sm\">\n                <span className=\"text-gray-300\">Disco</span>\n                <span className=\"text-white\">45.2GB / 100GB</span>\n              </div>\n              <Progress value={45.2} className=\"h-2\" />\n              <div className=\"flex justify-between text-xs text-gray-400\">\n                <span>Read: 2.5MB/s</span>\n                <span>Write: 1.2MB/s</span>\n                <span>IOPS: 150</span>\n              </div>\n            </div>\n\n            {/* Network Usage */}\n            <div className=\"space-y-2\">\n              <div className=\"flex justify-between text-sm\">\n                <span className=\"text-gray-300\">Rede</span>\n                <div className=\"flex items-center space-x-2\">\n                  <span className=\"flex items-center text-green-400\">\n                    <ArrowDown className=\"h-3 w-3 mr-1\" />\n                    2.1 MB/s\n                  </span>\n                  <span className=\"flex items-center text-blue-400\">\n                    <ArrowUp className=\"h-3 w-3 mr-1\" />\n                    1.5 MB/s\n                  </span>\n                </div>\n              </div>\n              <Progress value={65} className=\"h-2\" />\n              <div className=\"flex justify-between text-xs text-gray-400\">\n                <span>Conexões: 45</span>\n                <span>Latência: 24ms</span>\n                <span>Pacotes Perdidos: 0.1%</span>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card className=\"bg-gray-800 border-gray-700\">\n          <CardHeader>\n            <CardTitle className=\"text-white flex items-center\">\n              <AlertTriangle className=\"mr-2 h-5 w-5\" />\n              Alertas de Performance\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <ScrollArea className=\"h-[300px]\">\n              <div className=\"space-y-4\">\n                {/* TPS Drop Alert */}\n                {serverStatus.tps < 18 && (\n                  <div className=\"flex items-start space-x-3 p-3 bg-red-900/20 border border-red-900/30 rounded-lg\">\n                    <AlertTriangle className=\"h-5 w-5 text-red-400 mt-0.5\" />\n                    <div>\n                      <h4 className=\"text-sm font-medium text-red-400\">TPS Baixo Detectado</h4>\n                      <p className=\"text-sm text-red-400/80 mt-1\">\n                        O TPS atual está em {serverStatus.tps.toFixed(1)}, abaixo do ideal de 20.\n                        Isso pode causar lag no servidor.\n                      </p>\n                    </div>\n                  </div>\n                )}\n\n                {/* Memory Alert */}\n                {(serverStatus.memory.used / serverStatus.memory.total) > 0.85 && (\n                  <div className=\"flex items-start space-x-3 p-3 bg-yellow-900/20 border border-yellow-900/30 rounded-lg\">\n                    <AlertTriangle className=\"h-5 w-5 text-yellow-400 mt-0.5\" />\n                    <div>\n                      <h4 className=\"text-sm font-medium text-yellow-400\">Uso Alto de Memória</h4>\n                      <p className=\"text-sm text-yellow-400/80 mt-1\">\n                        O servidor está usando {((serverStatus.memory.used / serverStatus.memory.total) * 100).toFixed(1)}% da memória disponível.\n                        Considere aumentar a alocação de memória.\n                      </p>\n                    </div>\n                  </div>\n                )}\n\n                {/* CPU Alert */}\n                {serverStatus.cpu > 80 && (\n                  <div className=\"flex items-start space-x-3 p-3 bg-orange-900/20 border border-orange-900/30 rounded-lg\">\n                    <AlertTriangle className=\"h-5 w-5 text-orange-400 mt-0.5\" />\n                    <div>\n                      <h4 className=\"text-sm font-medium text-orange-400\">CPU Sobrecarregada</h4>\n                      <p className=\"text-sm text-orange-400/80 mt-1\">\n                        O uso da CPU está em {serverStatus.cpu.toFixed(1)}%.\n                        Verifique processos em execução e otimize plugins.\n                      </p>\n                    </div>\n                  </div>\n                )}\n\n                {/* Historical Alerts */}\n                <div className=\"flex items-start space-x-3 p-3 bg-blue-900/20 border border-blue-900/30 rounded-lg\">\n                  <Clock className=\"h-5 w-5 text-blue-400 mt-0.5\" />\n                  <div>\n                    <h4 className=\"text-sm font-medium text-blue-400\">Relatório de Uptime</h4>\n                    <p className=\"text-sm text-blue-400/80 mt-1\">\n                      Servidor online há {formatUptime(serverStatus.uptime)} sem reinicializações.\n                      Performance geral estável.\n                    </p>\n                  </div>\n                </div>\n\n                <div className=\"flex items-start space-x-3 p-3 bg-green-900/20 border border-green-900/30 rounded-lg\">\n                  <Users className=\"h-5 w-5 text-green-400 mt-0.5\" />\n                  <div>\n                    <h4 className=\"text-sm font-medium text-green-400\">Carga de Jogadores</h4>\n                    <p className=\"text-sm text-green-400/80 mt-1\">\n                      {serverStatus.playersOnline} jogadores online.\n                      Servidor operando dentro da capacidade.\n                    </p>\n                  </div>\n                </div>\n              </div>\n            </ScrollArea>\n          </CardContent>\n        </Card>\n      </div>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}